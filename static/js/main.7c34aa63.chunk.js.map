{"version":3,"sources":["globalStyle.ts","redux/actionTypes.ts","redux/actions.ts","ui/atoms/Inputs.ts","ui/atoms/Buttons.ts","ui/atoms/Typography.ts","components/atoms/Search.tsx","components/atoms/InputTitle.tsx","components/atoms/NoteTextarea.tsx","components/atoms/ActionIcon.tsx","components/atoms/Button.tsx","ui/molecules/PreviewBlock.ts","ui/molecules/PageHeader.ts","ui/molecules/PanelBlock.ts","components/molecules/Header.tsx","components/molecules/Note.tsx","components/molecules/ActionPanel.tsx","ui/organisms/List.ts","components/organisms/NotesList.tsx","ui/templates/ContentWrapper.ts","components/templates/MainTemplate.tsx","components/pages/NotesPage.tsx","components/pages/NoteEditPage.tsx","App.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","SET_NOTES","SET_SEARCH_QUERY","SET_SELECTED_NOTE","ADD_NOTE","DELETE_NOTE","SAVE_NOTE","TOGGLE_SHOW_EDIT","setSelectedNote","note","type","toggleShowEdit","inputDefaults","css","SearchInput","styled","input","TitleInput","Textarea","textarea","buttonDefaults","ButtonIcon","button","ButtonText","TopTitle","h1","Title","h3","Text","p","Time","Search","dispatch","useDispatch","placeholder","onChange","evt","query","target","value","InputTitle","selectedNote","useSelector","state","title","NoteTextarea","text","ActionIcon","click","icon","onClick","Button","PreviewBlock","li","PreviewBlockTitle","div","PreviewBlockTime","PreviewBlockText","PageHeader","header","PanelBlock","Header","Note","formatTime","Date","id","toLocaleString","split","ActionPanel","children","List","ul","NotesList","notes","searchQuery","allNotes","filter","includes","map","showNotes","ContentWrapper","main","MainTemplate","NotesPage","NoteEditPage","App","showNoteEdit","initialState","store","createStore","action","newNotes","n","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c34aa63.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --primary: rgba(255,204,0);\n    --gray: rgba(230,230,230);\n    --text-black: #333;\n    --text-gray: rgb(142,142,147);\n    --shadow: #d0d0d0;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Roboto', sans-serif;\n    color: var(--text-black);\n  }\n\n  html {\n    font-size: 16px;\n  }\n\n  html,body, #root {\n    height: 100%;\n    width: 100%;\n  }\n`;\n","import { NoteId, NoteType } from \"../types/NoteTypes\";\n\nexport const SET_NOTES = \"SET_NOTES\";\nexport const SET_SEARCH_QUERY = \"SET_SEARCH_QUERY\";\nexport const SET_SELECTED_NOTE = \"SET_SELECTED_NOTE\";\n\nexport const ADD_NOTE = \"ADD_NOTE\";\nexport const DELETE_NOTE = \"DELETE_NOTE\";\nexport const SAVE_NOTE = \"SAVE_NOTE\";\n\nexport const TOGGLE_SHOW_EDIT = \"TOGGLE_SHOW_EDIT\";\n\ninterface SetSearchQueryAction {\n  type: typeof SET_SEARCH_QUERY;\n  query: string;\n}\n\ninterface SetSelectedNoteAction {\n  type: typeof SET_SELECTED_NOTE;\n  note: NoteType;\n}\n\ninterface SetNotesAction {\n  type: typeof SET_NOTES;\n  notes: NoteType[];\n}\n\ninterface AddNoteAction {\n  type: typeof ADD_NOTE;\n  note: NoteType;\n}\n\ninterface DeleteNoteAction {\n  type: typeof DELETE_NOTE;\n  id: NoteId;\n}\n\ninterface SaveNoteAction {\n  type: typeof SAVE_NOTE;\n  note: NoteType;\n}\n\ninterface ShowNoteEditAction {\n  type: typeof TOGGLE_SHOW_EDIT;\n}\n\nexport type NotesActionTypes =\n  | SetSearchQueryAction\n  | SetSelectedNoteAction\n  | SetNotesAction\n  | AddNoteAction\n  | DeleteNoteAction\n  | SaveNoteAction\n  | ShowNoteEditAction;\n","import { NoteId, NoteText, NoteTitle, NoteType } from \"../types/NoteTypes\";\nimport {\n  ADD_NOTE,\n  DELETE_NOTE,\n  NotesActionTypes,\n  SAVE_NOTE,\n  SET_NOTES,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_NOTE,\n  TOGGLE_SHOW_EDIT,\n} from \"./actionTypes\";\n\nexport function setSearchQuery(query: string): NotesActionTypes {\n  return {\n    type: SET_SEARCH_QUERY,\n    query,\n  };\n}\n\nexport function setSelectedNote(note: NoteType): NotesActionTypes {\n  return {\n    type: SET_SELECTED_NOTE,\n    note,\n  };\n}\n\nexport function setNotes(notes: NoteType[]): NotesActionTypes {\n  return {\n    type: SET_NOTES,\n    notes,\n  };\n}\n\nexport function addNote(): NotesActionTypes {\n  return {\n    type: ADD_NOTE,\n    note: { title: \"\", text: \"\", id: +new Date() },\n  };\n}\n\nexport function deleteNote(id: NoteId): NotesActionTypes {\n  return {\n    type: DELETE_NOTE,\n    id,\n  };\n}\n\nexport function saveNote(note: NoteType): NotesActionTypes {\n  return {\n    type: SAVE_NOTE,\n    note,\n  };\n}\n\nexport function toggleShowEdit(): NotesActionTypes {\n  return {\n    type: TOGGLE_SHOW_EDIT,\n  };\n}\n","import styled, { css } from \"styled-components\";\n\nconst inputDefaults = css`\n  width: 100%;\n  height: 2rem;\n  max-width: 30rem;\n  min-height: 2rem;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  color: var(--text-black);\n`;\n\nexport const SearchInput = styled.input`\n  ${inputDefaults}\n  border-radius: 0.5rem;\n  text-align: center;\n  background: var(--gray);\n\n  &::placeholder {\n    color: var(--text-gray);\n  }\n`;\n\nexport const TitleInput = styled.input`\n  ${inputDefaults}\n  font-size: 1.75rem;\n  font-weight: 600;\n  margin: 0.5rem 0;\n`;\n\nexport const Textarea = styled.textarea`\n  ${inputDefaults}\n  width: 100%;\n  height: 100%;\n`;\n","import styled, { css } from \"styled-components\";\n\nconst buttonDefaults = css`\n  height: 2rem;\n  margin: 0 1rem;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  text-align: center;\n  background: none;\n`;\n\nexport const ButtonIcon = styled.button`\n  ${buttonDefaults}\n  width: 2rem;\n  font-size: 2rem;\n\n  svg {\n    fill: var(--primary);\n  }\n`;\n\nexport const ButtonText = styled.button`\n  ${buttonDefaults}\n  font-size: 1.25rem;\n  color: var(--primary);\n`;\n","import styled from \"styled-components\";\n\nexport const TopTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n`;\n\nexport const Title = styled.h3`\n  font-size: 1rem;\n  font-weight: 500;\n`;\n\nexport const Text = styled.p`\n  font-size: 0.85rem;\n  color: var(--text-gray);\n`;\n\nexport const Time = styled.p`\n  font-size: 0.85rem;\n  color: var(--text-gray);\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setSearchQuery } from \"../../redux/actions\";\nimport { SearchInput } from \"../../ui/atoms\";\n\nexport function Search() {\n  const dispatch = useDispatch();\n\n  const handleSearch = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    dispatch(setSearchQuery(evt.target.value));\n\n  return <SearchInput placeholder='Search' onChange={handleSearch} />;\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSelectedNote } from \"../../redux/actions\";\nimport { NotesState } from \"../../types/NoteTypes\";\nimport { TitleInput } from \"../../ui/atoms/\";\n\nexport function InputTitle() {\n  const selectedNote = useSelector((state: NotesState) => state.selectedNote);\n  const dispatch = useDispatch();\n\n  const handleTitleInput = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    dispatch(setSelectedNote({ ...selectedNote, title: evt.target.value }));\n\n  return (\n    <TitleInput\n      placeholder='Type your title'\n      value={selectedNote.title}\n      onChange={handleTitleInput}\n    />\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedNote } from \"../../redux/actions\";\nimport { NotesState } from \"../../types/NoteTypes\";\nimport { Textarea } from \"../../ui/atoms\";\n\nexport function NoteTextarea() {\n  const selectedNote = useSelector((state: NotesState) => state.selectedNote);\n  const dispatch = useDispatch();\n\n  const handleTextChange = (evt: React.ChangeEvent<HTMLTextAreaElement>) =>\n    dispatch(setSelectedNote({ ...selectedNote, text: evt.target.value }));\n\n  return <Textarea value={selectedNote.text} onChange={handleTextChange} />;\n}\n","import React from \"react\";\nimport { ButtonIcon } from \"../../ui/atoms\";\n\ninterface ActionIconProps {\n  click: React.MouseEventHandler<HTMLButtonElement>;\n  icon: React.ReactNode;\n}\n\nexport function ActionIcon({ click, icon }: ActionIconProps) {\n  return <ButtonIcon onClick={click}>{icon}</ButtonIcon>;\n}\n","import React from \"react\";\nimport { ButtonText } from \"../../ui/atoms\";\n\ninterface ButtonProps {\n  click: React.MouseEventHandler<HTMLButtonElement>;\n  text: string;\n}\n\nexport function Button({ click, text }: ButtonProps) {\n  return <ButtonText onClick={click}>{text}</ButtonText>;\n}\n","import styled from \"styled-components\";\n\nexport const PreviewBlock = styled.li`\n  display: grid;\n  width: 100%;\n  height: 3.75rem;\n  max-width: 768px;\n  grid-template-columns: 5rem auto;\n  grid-template-rows: 1.5rem auto;\n  align-items: center;\n  margin: 0.5rem 0;\n  padding: 0.4rem;\n  text-decoration: none;\n  user-select: none;\n  border-radius: 0.5rem;\n  background: var(--gray);\n`;\n\nexport const PreviewBlockTitle = styled.div`\n  grid-row: 1 / 2;\n  grid-column: 1 / -1;\n`;\n\nexport const PreviewBlockTime = styled.div`\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n`;\n\nexport const PreviewBlockText = styled.div`\n  grid-row: 2 / 3;\n  grid-column: 2 / 3;\n`;\n","import styled from \"styled-components\";\n\nexport const PageHeader = styled.header`\n  display: flex;\n  width: 100%;\n  height: 5rem;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const PanelBlock = styled.div`\n  display: flex;\n  width: 100%;\n  height: 2.5rem;\n  justify-content: center;\n  margin: 1rem 0;\n`;\n","import React from \"react\";\nimport { TopTitle } from \"../../ui/atoms\";\nimport { PageHeader } from \"../../ui/molecules\";\n\nexport function Header() {\n  return (\n    <PageHeader>\n      <TopTitle>Notify</TopTitle>\n    </PageHeader>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectedNote, toggleShowEdit } from \"../../redux/actions\";\nimport { NoteType } from \"../../types/NoteTypes\";\nimport { Text, Time, Title } from \"../../ui/atoms\";\nimport {\n  PreviewBlock,\n  PreviewBlockText,\n  PreviewBlockTime,\n  PreviewBlockTitle,\n} from \"../../ui/molecules\";\n\nexport function Note(note: NoteType) {\n  const dispatch = useDispatch();\n  // Format note id to human-readable string (ex. 18/11/2020)\n  const formatTime = new Date(note.id).toLocaleString().split(\",\")[0];\n\n  const handleNoteClick = () => {\n    dispatch(setSelectedNote(note));\n    dispatch(toggleShowEdit());\n  };\n\n  return (\n    <PreviewBlock onClick={handleNoteClick}>\n      <PreviewBlockTitle>\n        <Title>{note.title}</Title>\n      </PreviewBlockTitle>\n      <PreviewBlockTime>\n        <Time>{formatTime}</Time>\n      </PreviewBlockTime>\n      <PreviewBlockText>\n        <Text>{note.text}</Text>\n      </PreviewBlockText>\n    </PreviewBlock>\n  );\n}\n","import React from \"react\";\nimport { PanelBlock } from \"../../ui/molecules\";\n\ninterface PanelProps {\n  children: React.ReactNode;\n}\n\nexport function ActionPanel({ children }: PanelProps) {\n  return <PanelBlock>{children}</PanelBlock>;\n}\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem auto;\n  overflow-y: scroll;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NotesState } from \"../../types/NoteTypes\";\nimport { List } from \"../../ui/organisms\";\nimport { Note } from \"../molecules\";\n\nexport function NotesList() {\n  const { notes, searchQuery } = useSelector((state: NotesState) => ({\n    notes: state.notes,\n    searchQuery: state.searchQuery,\n  }));\n\n  const showNotes = () => {\n    let allNotes = [...notes];\n\n    if (searchQuery) {\n      allNotes = allNotes.filter((note) => note.title.includes(searchQuery));\n    }\n\n    return allNotes.map((note) => <Note {...note} />);\n  };\n\n  return <List>{showNotes()}</List>;\n}\n","import styled from \"styled-components\";\n\nexport const ContentWrapper = styled.main`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  max-width: 1024px;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  padding: 0 1rem;\n`;\n","import React from \"react\";\nimport { ContentWrapper } from \"../../ui/templates\";\nimport { Header } from \"../molecules\";\n\ninterface MainTemplateProps {\n  children: React.ReactNode;\n}\n\nexport function MainTemplate({ children }: MainTemplateProps) {\n  return (\n    <ContentWrapper>\n      <Header />\n      {children}\n    </ContentWrapper>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionIcon, Search } from \"../atoms\";\nimport { ActionPanel } from \"../molecules\";\nimport { NotesList } from \"../organisms\";\nimport { MainTemplate } from \"../templates\";\nimport { VscAdd } from \"react-icons/vsc\";\nimport { addNote } from \"../../redux/actions\";\n\nexport function NotesPage() {\n  const dispatch = useDispatch();\n\n  const handleAddNote = () => dispatch(addNote());\n\n  return (\n    <MainTemplate>\n      <ActionPanel>\n        <Search />\n        <ActionIcon icon={<VscAdd />} click={handleAddNote} />\n      </ActionPanel>\n      <NotesList />\n    </MainTemplate>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { VscTrash, VscChevronLeft } from \"react-icons/vsc\";\nimport { ActionIcon, Button, InputTitle, NoteTextarea } from \"../atoms/\";\nimport { ActionPanel } from \"../molecules\";\nimport { MainTemplate } from \"../templates\";\nimport { NotesState } from \"../../types/NoteTypes\";\nimport { deleteNote, saveNote, toggleShowEdit } from \"../../redux/actions\";\n\nexport function NoteEditPage() {\n  const selectedNote = useSelector((state: NotesState) => state.selectedNote);\n  const dispatch = useDispatch();\n\n  const handleClickBack = () => dispatch(toggleShowEdit());\n\n  const handleClickDelete = () => {\n    dispatch(deleteNote(selectedNote.id));\n    dispatch(toggleShowEdit());\n  };\n\n  const handleClickDone = () => {\n    dispatch(saveNote(selectedNote));\n    dispatch(toggleShowEdit());\n  };\n\n  return (\n    <MainTemplate>\n      <ActionPanel>\n        <ActionIcon icon={<VscChevronLeft />} click={handleClickBack} />\n        <ActionIcon icon={<VscTrash />} click={handleClickDelete} />\n        <Button text='Done' click={handleClickDone} />\n      </ActionPanel>\n      <InputTitle />\n      <NoteTextarea />\n    </MainTemplate>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { GlobalStyle } from \"./globalStyle\";\nimport { NoteEditPage, NotesPage } from \"./components/pages\";\nimport { NotesState } from \"./types/NoteTypes\";\n\nexport function App() {\n  const showNoteEdit = useSelector((state: NotesState) => state.showNoteEdit);\n  return (\n    <>\n      <GlobalStyle />\n      {showNoteEdit ? <NoteEditPage /> : <NotesPage />}\n    </>\n  );\n}\n","import { NotesState } from \"../types/NoteTypes\";\nimport {\n  ADD_NOTE,\n  DELETE_NOTE,\n  NotesActionTypes,\n  SAVE_NOTE,\n  SET_NOTES,\n  SET_SEARCH_QUERY,\n  SET_SELECTED_NOTE,\n  TOGGLE_SHOW_EDIT,\n} from \"./actionTypes\";\n\nconst initialState: NotesState = {\n  searchQuery: \"\",\n  notes: [],\n  selectedNote: { title: \"\", text: \"\", id: 0 },\n  showNoteEdit: false,\n};\n\nexport const mainReducer = (state = initialState, action: NotesActionTypes) => {\n  switch (action.type) {\n    case SET_SEARCH_QUERY:\n      return { ...state, searchQuery: action.query };\n\n    case SET_NOTES:\n      return { ...state, notes: action.notes };\n\n    case SET_SELECTED_NOTE:\n      return { ...state, selectedNote: action.note };\n\n    case ADD_NOTE:\n      return { ...state, notes: [...state.notes, action.note] };\n\n    case DELETE_NOTE:\n      return {\n        ...state,\n        notes: state.notes.filter((note) => note.id !== action.id),\n      };\n\n    case SAVE_NOTE:\n      const newNotes = state.notes.filter((n) => n.id !== action.note.id);\n      return {\n        ...state,\n        notes: [...newNotes, action.note],\n      };\n\n    case TOGGLE_SHOW_EDIT:\n      return { ...state, showNoteEdit: !state.showNoteEdit };\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport { mainReducer } from \"./reducer\";\n\nexport const store = createStore(mainReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}